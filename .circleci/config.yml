version: 2.1

orbs:
  python: circleci/python@1.5.0

jobs:
  docs:
    docker:
      - image: cimg/python:3.8.15
    steps:
      - checkout
      - restore_cache:
          keys:
            - docs-cache-{{ checksum "poetry.lock" }}
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Run
          command: poetry run nox -s docs xdoctest
      - save_cache:
          paths:
            - /home/circleci/project/.nox
            - /home/circleci/project/.venv
          key: docs-cache-{{ checksum "poetry.lock" }}
      - store_artifacts:
          path: docs/_build
  lint:
    docker:
      - image: cimg/python:3.8.15
    steps:
      - checkout
      - restore_cache:
          keys:
            - lint-cache-{{ checksum ".pre-commit-config.yaml" }}
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Run
          command: poetry run pre-commit run --all
      - save_cache:
          paths:
            - /home/circleci/project/.venv
            - ~/.cache/pre-commit
          key: lint-cache-{{ checksum ".pre-commit-config.yaml" }}
  security:
    docker:
      - image: cimg/python:3.8.15
    steps:
      - checkout
      - restore_cache:
          keys:
            - security-cache-{{ checksum "poetry.lock" }}
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Run
          command: poetry run nox -s safety
      - save_cache:
          paths:
            - /home/circleci/project/.nox
            - /home/circleci/project/.venv
          key: security-cache-{{ checksum "poetry.lock" }}
  test:
    docker:
      - image: cimg/python:3.8.15
    parallelism: 4
    steps:
      - checkout
      - restore_cache:
          keys:
            - test-cache-{{ checksum "poetry.lock" }}
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Run
          command: |
            set -e
            TEST_FILES=$(circleci tests glob "tests/**/test_*.py" | circleci tests split --split-by=timings)
            echo $TEST_FILES
            poetry run nox -- -s tests -- $TEST_FILES
      - save_cache:
          paths:
            - /home/circleci/project/.nox
            - /home/circleci/project/.venv
          key: test-cache-{{ checksum "poetry.lock" }}
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: htmlcov
  typing:
    docker:
      - image: cimg/python:3.8.15
    parallelism: 4
    steps:
      - checkout
      - restore_cache:
          keys:
            - typing-cache-{{ checksum "poetry.lock" }}
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Run
          command: |
            set -e
            TEST_FILES=$(circleci tests glob "tests/**/test_*.py" | circleci tests split --split-by=timings)
            poetry run nox -- -s typeguard -- $TEST_FILES
      - save_cache:
          paths:
            - /home/circleci/project/.nox
            - /home/circleci/project/.venv
          key: typing-cache-{{ checksum "poetry.lock" }}

workflows:
  sample:
    jobs:
      - docs
      - lint
      - security
      - test
      - typing
