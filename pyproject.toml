[tool.poetry]
name = "app"
version = "0.1.0"
description = "Utilities using best practices with notes and examples"
documentation = "https://automata-backend.readthedocs.io"
authors = ["Felipe Restrepo <maferelo@users.noreply.github.com>"]

[tool.poetry.dependencies]
python = "^3.8"
python-crontab = "^2.6.0"
python-telegram-bot = "^13.12"
fastapi = "^0.78.0"
uvicorn = "^0.18.1"
ormar = "^0.11.2"
psycopg2-binary = "^2.9.3"
asyncpg = "^0.25.0"
alembic = "^1.8.1"
python-decouple = "^3.6"
numpy = "1.22.2"
scikit-learn = "0.24.2"
ipykernel = "^6.15.3"
pandas = "1.3"
typer = "^0.6.1"
requests = "^2.28.1"
click = "8.1.3"
desert = "^2022.9.22"
marshmallow = "^3.19.0"
python-dotenv = "^0.21.0"
aiofiles = "^22.1.0"
python-multipart = "^0.0.5"
jinja2 = "^3.1.2"
markdown = "^3.4.1"
gunicorn = "^20.1.0"

[tool.poetry.group.dev.dependencies]
pylint = "^2.15.3"
mypy = "^0.982"
types-requests = "^2.28.11.2"
pytest = "^7.1.3"
black = "^22.10.0"
pre-commit = "^2.20.0"
coverage = {extras = ["toml"], version = "^6.5.0"}
pytest-cov = "^4.0.0"
nox = "^2022.8.7"
pytest-mock = "^3.10.0"
flake8 = "^5.0.4"
flake8-bandit = "^4.1.1"
flake8-black = "^0.3.3"
flake8-bugbear = "^22.9.23"
safety = "^2.3.1"
nox-poetry = "^1.0.1"
pygments = "^2.13.0"
typeguard = "^2.13.3"
pyupgrade = "^3.2.0"
isort = "^5.10.1"
darglint = "^1.8.1"
bandit = "^1.7.4"
gitlint-core = "^0.17.0"
yamllint = "^1.28.0"
shellcheck-py = "^0.8.0.4"
blacken-docs = "^1.12.1"
flake8-docstrings = "^1.6.0"
sphinx = "^5.3.0"
sphinx-autodoc-typehints = "^1.19.5"
xdoctest = "^1.1.0"

[tool.poetry.scripts]
app = "src.app.console:main"

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["app"]

[tool.coverage.report]
fail_under = 100
show_missing = true

[tool.isort]
force_single_line = true
profile = "black"

[tool.mypy]
exclude = [".env", ".venv", "apps", "notes", "migrations"]
ignore_missing_imports = "True"

[tool.pytest.ini_options]
testpaths = ["tests"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
